<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2011-2025 the original author or authors.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

         https://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.data.build</groupId>
		<artifactId>spring-data-parent</artifactId>
		<version>4.0.0-SNAPSHOT</version>
	</parent>

	<groupId>org.springframework.data</groupId>
	<artifactId>spring-data-neo4j</artifactId>
	<version>8.0.0-UDC-SNAPSHOT</version>

	<name>Spring Data Neo4j</name>
	<description>Next generation Object-Graph-Mapping for Spring Data.</description>
	<url>https://projects.spring.io/spring-data-neo4j</url>
	<inceptionYear>2019</inceptionYear>
	<organization>
		<name>Neo4j, Neo4j Sweden AB</name>
		<url>https://neo4j.com</url>
	</organization>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<developers>
		<developer>
			<id>gmeier</id>
			<name>Gerrit Meier</name>
			<email>gerrit.meier at neo4j.com</email>
			<organization>Neo Technology</organization>
			<organizationUrl>https://www.neotechnology.com</organizationUrl>
			<roles>
				<role>Project Lead</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
		<developer>
			<id>msimons</id>
			<name>Michael Simons</name>
			<email>michael.simons at neo4j.com</email>
			<organization>Neo Technology</organization>
			<organizationUrl>https://www.neotechnology.com</organizationUrl>
			<roles>
				<role>Project Lead</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>

	<properties>
		<antora.playbook>${project.basedir}/src/main/antora/antora-playbook.yml</antora.playbook>
		<apiguardian.version>1.1.1</apiguardian.version>
		<archunit.version>0.23.1</archunit.version>
		<blockhound.version>1.0.8.RELEASE</blockhound.version>
		<checkstyle.skip>${skipTests}</checkstyle.skip>
		<checkstyle.version>10.20.1</checkstyle.version>
		<cypher-dsl.version>2025.1.0</cypher-dsl.version>
		<dist.id>spring-data-neo4j</dist.id>
		<dist.key>SDNEO4J</dist.key>
		<flatten-maven-plugin.version>1.7.0</flatten-maven-plugin.version>
		<jacoco-maven-plugin.version>${jacoco}</jacoco-maven-plugin.version>
		<jakarta.interceptor-api.version>2.0.1</jakarta.interceptor-api.version>
		<jakarta.transaction-api.version>2.0.0</jakarta.transaction-api.version>
		<java-module-name>spring.data.neo4j</java-module-name>
		<java.version>17</java.version>
		<jaxb.version>2.3.1</jaxb.version>
		<jna.version>5.8.0</jna.version>
		<jspecify.version>1.0.0</jspecify.version>
		<jsr305.version>3.0.2</jsr305.version>
		<junit-cc-testcontainer>2021.0.1</junit-cc-testcontainer>
		<junit-pioneer.version>2.2.0</junit-pioneer.version>
		<license-maven-plugin.version>5.0.0</license-maven-plugin.version>
		<maven-checkstyle-plugin.version>3.6.0</maven-checkstyle-plugin.version>
		<maven-install-plugin.version>3.1.4</maven-install-plugin.version>
		<maven-site-plugin.version>3.7.1</maven-site-plugin.version>
		<maven.compiler.release>${java.version}</maven.compiler.release>
		<neo4j-java-driver.version>6.0.1</neo4j-java-driver.version>
		<neo4j-migrations.version>2.17.3</neo4j-migrations.version>
		<neo4j.version>5.26.13</neo4j.version>
		<objenesis.version>3.0.1</objenesis.version>
		<org.osgi.core.version>6.0.0</org.osgi.core.version>
		<project.build.docs>${project.build.directory}/docs</project.build.docs>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<r2dbc.releasetrain>Arabba-SR11</r2dbc.releasetrain>
		<reactive-streams.version>1.2.1</reactive-streams.version>
		<skipArchitectureTests>true</skipArchitectureTests>
		<skipIntegrationTests>${skipTests}</skipIntegrationTests>
		<skipUnitTests>${skipTests}</skipUnitTests>
		<sortpom-maven-plugin.version>4.0.0</sortpom-maven-plugin.version>
		<spring-javaformat.version>0.0.46</spring-javaformat.version>
		<springdata.commons>4.0.0-SNAPSHOT</springdata.commons>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.r2dbc</groupId>
				<artifactId>r2dbc-bom</artifactId>
				<version>${r2dbc.releasetrain}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j-cypher-dsl-bom</artifactId>
				<version>${cypher-dsl.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>${jsr305.version}</version>
			</dependency>
			<dependency>
				<groupId>com.tngtech.archunit</groupId>
				<artifactId>archunit</artifactId>
				<version>${archunit.version}</version>
			</dependency>
			<dependency>
				<groupId>io.projectreactor.tools</groupId>
				<artifactId>blockhound</artifactId>
				<version>${blockhound.version}</version>
			</dependency>
			<dependency>
				<groupId>io.reactivex.rxjava2</groupId>
				<artifactId>rxjava</artifactId>
				<version>${rxjava2}</version>
			</dependency>
			<dependency>
				<groupId>jakarta.interceptor</groupId>
				<artifactId>jakarta.interceptor-api</artifactId>
				<version>${jakarta.interceptor-api.version}</version>
			</dependency>
			<dependency>
				<groupId>net.java.dev.jna</groupId>
				<artifactId>jna</artifactId>
				<version>${jna.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apiguardian</groupId>
				<artifactId>apiguardian-api</artifactId>
				<version>${apiguardian.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jspecify</groupId>
				<artifactId>jspecify</artifactId>
				<version>${jspecify.version}</version>
			</dependency>
			<dependency>
				<groupId>org.junit-pioneer</groupId>
				<artifactId>junit-pioneer</artifactId>
				<version>${junit-pioneer.version}</version>
			</dependency>
			<dependency>
				<groupId>org.neo4j</groupId>
				<artifactId>neo4j</artifactId>
				<version>${neo4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.neo4j.driver</groupId>
				<artifactId>neo4j-java-driver</artifactId>
				<version>${neo4j-java-driver.version}</version>
			</dependency>
			<dependency>
				<groupId>org.neo4j.test</groupId>
				<artifactId>neo4j-harness</artifactId>
				<version>${neo4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.objenesis</groupId>
				<artifactId>objenesis</artifactId>
				<version>${objenesis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>${org.osgi.core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${slf4j}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-commons</artifactId>
				<version>${springdata.commons}</version>
			</dependency>
			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${jaxb.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>eu.michael-simons.neo4j</groupId>
				<artifactId>junit-jupiter-causal-cluster-testcontainer-extension</artifactId>
				<version>${junit-cc-testcontainer}</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-core</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.reactivex.rxjava2</groupId>
			<artifactId>rxjava</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>jakarta.transaction</groupId>
			<artifactId>jakarta.transaction-api</artifactId>
			<version>${jakarta.transaction-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib</artifactId>
			<optional>true</optional>
			<exclusions>
				<exclusion>
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-core</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlinx</groupId>
			<artifactId>kotlinx-coroutines-reactor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-dsl</artifactId>
		</dependency>
		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-dsl-schema-name-support</artifactId>
		</dependency>
		<dependency>
			<groupId>org.neo4j.driver</groupId>
			<artifactId>neo4j-java-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-commons</artifactId>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-core</artifactId>
			<version>${querydsl}</version>
			<scope>provided</scope>
			<exclusions>
				<exclusion>
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>jakarta.enterprise</groupId>
			<artifactId>jakarta.enterprise.cdi-api</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<!-- Including this explicitly in test scope makes
			[WARNING] unknown enum constant When.MAYBE
			[WARNING]   reason: class file for javax.annotation.meta.When not found
			go away
			-->
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.tngtech.archunit</groupId>
			<artifactId>archunit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.michael-simons.neo4j</groupId>
			<artifactId>junit-jupiter-causal-cluster-testcontainer-extension</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>eu.michael-simons.neo4j</groupId>
			<artifactId>neo4j-migrations</artifactId>
			<version>${neo4j-migrations.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.mockk</groupId>
			<artifactId>mockk-jvm</artifactId>
			<version>${mockk}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.projectreactor</groupId>
			<artifactId>reactor-test</artifactId>
			<scope>test</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>io.projectreactor.tools</groupId>
			<artifactId>blockhound</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.r2dbc</groupId>
			<artifactId>r2dbc-h2</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.openwebbeans</groupId>
			<artifactId>openwebbeans-se</artifactId>
			<version>${webbeans}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit-pioneer</groupId>
			<artifactId>junit-pioneer</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-r2dbc</artifactId>
			<version>1.1.0.RELEASE</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers</artifactId>
			<scope>test</scope>
			<!-- Exclusion because there is a Spring Data parent dependency to a newer JUnit version -->
			<exclusions>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.projectlombok</groupId>
					<artifactId>lombok</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers-junit-jupiter</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.jetbrains</groupId>
					<artifactId>annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>testcontainers-neo4j</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<!-- The Spring Data Commons tooling removes this (ok), but adds it back unsorted, so we just ignore this part completely. -->
	<?SORTPOM IGNORE?>
	<repositories>
		<repository>
			<id>spring-snapshot</id>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>spring-milestone</id>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<?SORTPOM RESUME?>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.github.ekryd.sortpom</groupId>
					<artifactId>sortpom-maven-plugin</artifactId>
					<version>${sortpom-maven-plugin.version}</version>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<keepBlankLines>true</keepBlankLines>
						<nrOfIndentSpace>-1</nrOfIndentSpace>
						<sortProperties>true</sortProperties>
						<sortDependencies>scope,groupId,artifactId</sortDependencies>
						<createBackupFile>false</createBackupFile>
						<expandEmptyElements>false</expandEmptyElements>
						<verifyFail>stop</verifyFail>
						<verifyFailOn>strict</verifyFailOn>
						<spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
						<pomFile>pom.xml</pomFile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<licenseSets>
							<licenseSet>
								<header>${project.basedir}/etc/license.tpl</header>
								<properties>
									<year>2025</year>
								</properties>
								<includes>
									<include>**</include>
								</includes>
								<excludes>
									<exclude>**/*.adoc</exclude>
									<exclude>**/*.cypher</exclude>
									<exclude>**/.flattened-pom.xml</exclude>
									<exclude>**/*.tpl</exclude>
									<exclude>**/aot.factories</exclude>
									<exclude>**/Jenkinsfile</exclude>
									<exclude>**/license.txt</exclude>
									<exclude>**/LICENSE.txt</exclude>
									<exclude>**/notice.txt</exclude>
									<exclude>**/org.mockito.plugins.MockMaker</exclude>
									<exclude>**/spring.tooling</exclude>
								</excludes>
							</licenseSet>
						</licenseSets>
					</configuration>
				</plugin>
				<plugin>
					<groupId>io.spring.javaformat</groupId>
					<artifactId>spring-javaformat-maven-plugin</artifactId>
					<version>${spring-javaformat.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${checkstyle.version}</version>
						</dependency>
						<dependency>
							<groupId>io.spring.javaformat</groupId>
							<artifactId>spring-javaformat-checkstyle</artifactId>
							<version>${spring-javaformat.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>flatten-maven-plugin</artifactId>
					<version>${flatten-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.github.ekryd.sortpom</groupId>
				<artifactId>sortpom-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>verify</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.mycila</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>validate</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.spring.javaformat</groupId>
				<artifactId>spring-javaformat-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>validate</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<id>checkstyle-validation</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
						<inherited>true</inherited>
						<configuration combine.self="override">
							<excludes>**/module-info.java</excludes>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<configLocation>etc/checkstyle/config.xml</configLocation>
							<suppressionsLocation>etc/checkstyle/suppressions.xml</suppressionsLocation>
							<inputEncoding>${project.build.sourceEncoding}</inputEncoding>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<append>true</append>
						</configuration>
					</execution>
					<execution>
						<id>prepare-agent-integration</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
						<configuration>
							<append>true</append>
							<destFile>${project.build.directory}/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<phase>validate</phase>
						<configuration>
							<rules>
								<requireMavenVersion>
									<version>3.8.3</version>
								</requireMavenVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
					<useFile>false</useFile>
					<includes>
						<include>**/*Test.java</include>
						<include>**/*Tests.java</include>
					</includes>
					<skipTests>${skipUnitTests}</skipTests>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<skipTests>${skipIntegrationTests}</skipTests>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>resolveCiFriendliesOnly</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<goals>
							<goal>flatten</goal>
						</goals>
						<phase>process-resources</phase>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<goals>
							<goal>clean</goal>
						</goals>
						<phase>clean</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addBuildEnvironmentEntries>true</addBuildEnvironmentEntries>
						</manifest>
						<manifestEntries>
							<Automatic-Module-Name>${java-module-name}</Automatic-Module-Name>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>antora-process-resources</id>
			<build>
				<resources>
					<resource>
						<filtering>true</filtering>
						<directory>src/main/antora/resources/antora-resources</directory>
					</resource>
				</resources>
			</build>
		</profile>

		<profile>
			<id>antora</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.antora</groupId>
						<artifactId>antora-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>generate-test-jar</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>test-jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>fast</id>
			<activation>
				<property>
					<name>fast</name>
				</property>
			</activation>
			<properties>
				<asciidoctor.skip>true</asciidoctor.skip>
				<checkstyle.skip>true</checkstyle.skip>
				<docker.skip>true</docker.skip>
				<jacoco.skip>true</jacoco.skip>
				<license.skip>true</license.skip>
				<maven.javadoc.skip>true</maven.javadoc.skip>
				<skipTests>true</skipTests>
				<sort.skip>true</sort.skip>
				<spring-javaformat.skip>true</spring-javaformat.skip>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.ekryd.sortpom</groupId>
						<artifactId>sortpom-maven-plugin</artifactId>
						<configuration>
							<skip>true</skip>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

</project>
